/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPackage;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream; 
import javax.sound.sampled.AudioSystem; 
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author Ramu Sharma
 */
public class Play extends javax.swing.JFrame {
    int octave1 = 0, octave2 = 0;
    char[] mappedKey;//key mapped on keyboard
    String[] keys = {"C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"};
    String[] noteFilePaths;//File paths of notes
    File[] playedNote;
    Clip[] clips = new Clip[12];
    int lines, begNote, endNote;

    /**
     * Creates new form Play
     */
    public Play() {
        initComponents();
        
        menuButton.setOpaque(false);
        menuButton.setContentAreaFilled(false);
        menuButton.setBorderPainted(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        notePlayed = new javax.swing.JLabel();
        menuButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Note played:");

        notePlayed.setBackground(new java.awt.Color(0, 0, 0));
        notePlayed.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        notePlayed.setForeground(new java.awt.Color(255, 255, 255));

        menuButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        menuButton.setForeground(new java.awt.Color(255, 255, 255));
        menuButton.setText("Menu");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(notePlayed, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(488, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notePlayed, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed

    }//GEN-LAST:event_jPanel1KeyPressed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        Home h = new Home();
        this.setVisible(false);
        h.setVisible(true);
    }//GEN-LAST:event_menuButtonActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        String note = Character.toString(evt.getKeyChar());
        
        int noteCnt = begNote, octCnt = octave2; 
        
        for (int i = 0; i<lines-2; i++){
            if (noteCnt==12){
                noteCnt = 0;
                octCnt--;
                
                if (octCnt == octave1 && noteCnt==endNote){
                    break;
                }
            }
            if (note.equalsIgnoreCase(Character.toString(mappedKey[i]))){
                PlayKey(i, new File(noteFilePaths[i]));
            }            
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    void GetLineCount(String fileDest){
        BufferedReader reader = null;
        try {
            reader = new BufferedReader(new FileReader(fileDest));
            lines = 0;
            while (reader.readLine() != null) lines++;
            reader.close();
        }
        catch (FileNotFoundException ex) {
            System.out.println(ex);
        }
        catch(IOException ex){
            System.out.println(ex);
        }
        finally {
            try {
                reader.close();
            }
            catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }
    
    void Setup(String fileDest){
        try{
            File f = new File(fileDest);
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader (fr);
            
            int index = 0;
            String temp;
            mappedKey = new char[lines-2];
            boolean whiteSpace = false;
            int whiteCnt = 0;
            
            octave1 = Integer.parseInt(br.readLine().substring(6));
            octave2 = Integer.parseInt(br.readLine().substring(6));
//            System.out.println("Octave 1: " + octave1);
//            System.out.println("Octave 2: " + octave2);
//            System.out.println("Lines: " + lines);
            
            String begNoteStr = "", endNoteStr = "";
            
            //to get set of piano keys needed by user
            while (index < lines-2){
                temp = br.readLine();
                if (index == 0){
                    begNoteStr = temp.substring(0, 2).trim();
                }
                if (index == lines-3){
//                    System.out.println("end temp: " + temp);
                    endNoteStr = temp.substring(0, 2).trim();
                }
                mappedKey[index] = temp.charAt(temp.length()-1);
                index++;
            }
//            System.out.println(index);
//            System.out.println("Beg Note:" + begNoteStr);
//            System.out.println("End Note:" + endNoteStr);
            
            //to get begNote and endNote key indexes
            for (int i = 0; i<12; i++){
                if (keys[i].equalsIgnoreCase(begNoteStr)){
                    begNote = i;
                }
                if (keys[i].equalsIgnoreCase(endNoteStr)){
                    endNote = i;
                }
            }
        }
        catch (IOException e){
            System.out.print(e);
        }
        
        noteFilePaths = new String[lines-2];
        int noteCnt = begNote, octCnt = octave1;
//        System.out.println("Beg Note:" + keys[begNote]);
//        System.out.println("End Note:" + keys[endNote]);
        
        //to get file paths of notes
        for (int i = 0; i<lines-2; i++){
            if (noteCnt==12){
                noteCnt = 0;
                octCnt++;
                
                if (octCnt == octave2 && noteCnt==endNote){
                    break;
                }
            }
            noteFilePaths[i] = System.getProperty("user.dir") + "\\SoundSource\\Piano88\\Octave" + octCnt + "\\Octave" + octCnt + "" + keys[noteCnt] + ".wav";
            noteCnt++;
        }
//        System.out.println("Path: " + noteFilePaths[0]);
        
//        for (int i = 0; i<noteFilePaths.length; i++){
//            System.out.println(noteFilePaths[i]);
//        }
    }
    
    void PlayKey(int index, File soundFile){
        try {
            AudioInputStream ais = AudioSystem.getAudioInputStream(soundFile);
            Clip clip = AudioSystem.getClip();
            clip.open(ais);
            clip.start();
        }
        catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {
            System.out.println(ex);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Play().setVisible(true);
            }
        });
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton menuButton;
    private javax.swing.JLabel notePlayed;
    // End of variables declaration//GEN-END:variables
}
